digraph create {
   node_param_list[shape=record,label="{<param_list>kind='ZEND_AST_PARAM_LIST' (136) |children=2|<child0>child[0]|<child1>child[1]|...}"];
   node_param0[shape=record,label="{<kind>kind='ZEND_AST_PARAM' (773)|children=0|<child0>child[0]|<child1>child[1]|<child2>child[2]}"];
   node_param1[shape=record,label="{<kind>kind='ZEND_AST_PARAM' (773)|children=0|<child0>child[0]|<child1>child[1]|<child2>child[2]}"];
   node_zval0[shape=record,label="{<kind>kind='ZEND_AST_ZVAL' (64)|zval val}"];
   node_zval1[shape=record,label="{<kind>kind='ZEND_AST_ZVAL' (64)|zval val}"];
   node_zval2[shape=record,label="{<kind>kind='ZEND_AST_ZVAL' (64)|zval val}"];
   node_zval3[shape=record,label="{<kind>kind='ZEND_AST_ZVAL' (64)|zval val}"];
   node_zval4[shape=record,label="{<kind>kind='ZEND_AST_ZVAL' (64)|zval val}"];
   node_zval5[shape=record,label="{<kind>kind='ZEND_AST_ZVAL' (64)|zval val}"];
   node_param_list:child0->node_param0;
   node_param_list:child1->node_param1
   node_param0:child0->node_zval0;
   node_param0:child1->node_zval1;
   node_param0:child2->node_zval2;
   node_param1:child0->node_zval3;
   node_param1:child1->node_zval4;
   node_param1:child2->node_zval5;
   zend_string0[shape=record,label="{zend_string|'String'(类型)}"];
   zend_string1[shape=record,label="{zend_string|'tem'(变量名称)}"];
   zend_string2[shape=record,label="{zend_string|'1'(默认值)}"];
   node_zval0->zend_string0;
   node_zval1->zend_string1;
   node_zval2->zend_string2;
   
} 
